DROP TABLE EMPLOYEE;
/
DROP TABLE DEPARTMENT;
/

CREATE TABLE EMPLOYEE (
    EMPLOYEE_ID INTEGER PRIMARY KEY,
    EMP_FIRSTNAME VARCHAR2(100),
    EMP_LASTNAME VARCHAR2(100),
    DEPARTMENT_ID INTEGER NOT NULL,
    SALARY INTEGER,
    EMP_EMAIL VARCHAR2(100)
);
/
CREATE TABLE DEPARTMENT (
    DEPARTMENT_ID INTEGER PRIMARY KEY,
    DEPARTMENT_NAME VARCHAR2(100) NOT NULL
);
/

--FOREIGN KEY CONSTRAINTS 

ALTER TABLE EMPLOYEE
ADD CONSTRAINT FK_EMPLOYEE_DEPARTMENT_ID
FOREIGN KEY (DEPARTMENT_ID) REFERENCES DEPARTMENT(DEPARTMENT_ID);
/
--DROPING SEQUENCE
DROP SEQUENCE SQ_EMPLOYEE_PRIMARY_KEYS;
DROP SEQUENCE SQ_DEPARTMENT_PRIMARY_KEYS;
--SET UP SEQUENCES TO PRODUCE PRIMARY KEYS 
CREATE SEQUENCE SQ_EMPLOYEE_PRIMARY_KEYS
START WITH 1000
INCREMENT BY 1;
/
CREATE SEQUENCE SQ_DEPARTMENT_PRIMARY_KEYS
START WITH 1000
INCREMENT BY 1;
/
--TRIGGERS
CREATE OR REPLACE TRIGGER TR_INSERT_EMPLOYEE
BEFORE INSERT ON EMPLOYEE
FOR EACH ROW
BEGIN
    SELECT SQ_EMPLOYEE_PRIMARY_KEYS.NEXTVAL INTO :NEW.EMPLOYEE_ID FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER TR_INSERT_DEPARTMENT
BEFORE INSERT ON DEPARTMENT
FOR EACH ROW
BEGIN
    SELECT SQ_DEPARTMENT_PRIMARY_KEYS.NEXTVAL INTO :NEW.DEPARTMENT_ID FROM DUAL;
END;
/
--INSERTING DATA
INSERT ALL
    INTO DEPARTMENT (DEPARTMENT_NAME) VALUES ('Marketing')
    INTO DEPARTMENT (DEPARTMENT_NAME) VALUES ('Customer Service')
    INTO DEPARTMENT (DEPARTMENT_NAME) VALUES ('Tech')
SELECT * FROM DUAL;
/
INSERT ALL
    INTO EMPLOYEE (EMP_FIRSTNAME, EMP_LASTNAME, DEPARTMENT_ID, SALARY, EMP_EMAIL) VALUES ('John','Jay',1000,80000,'aa@b.com')
    INTO EMPLOYEE (EMP_FIRSTNAME, EMP_LASTNAME, DEPARTMENT_ID, SALARY, EMP_EMAIL) VALUES ('Johny','Jey',1000,80000,'ab@b.com')
    INTO EMPLOYEE (EMP_FIRSTNAME, EMP_LASTNAME, DEPARTMENT_ID, SALARY, EMP_EMAIL) VALUES ('Bill','Adam',1001,70000,'ac@b.com')
    INTO EMPLOYEE (EMP_FIRSTNAME, EMP_LASTNAME, DEPARTMENT_ID, SALARY, EMP_EMAIL) VALUES ('Mac','Man',1001,60000,'ad@b.com')
    INTO EMPLOYEE (EMP_FIRSTNAME, EMP_LASTNAME, DEPARTMENT_ID, SALARY, EMP_EMAIL) VALUES ('Jenny','Chole',1002,80000,'ae@b.com')
    INTO EMPLOYEE (EMP_FIRSTNAME, EMP_LASTNAME, DEPARTMENT_ID, SALARY, EMP_EMAIL) VALUES ('Ash','Ketchum',1002,90000,'af@b.com')
SELECT * FROM DUAL;
/

--stored procedure
CREATE OR REPLACE PROCEDURE SP_GIVE_RAISE(DEP_ID IN INTEGER, AVG_SAL OUT NUMBER, VALID_ID OUT NUMBER)
IS
DEP_EXIST NUMBER;
BEGIN
    SELECT COUNT(DEP_ID) INTO DEP_EXIST FROM DEPARTMENT WHERE DEPARTMENT_ID = DEP_ID;
    IF DEP_EXIST > 0 THEN
        UPDATE EMPLOYEE SET SALARY = (SALARY*0.1) +SALARY WHERE DEPARTMENT_ID = DEP_ID;
        SELECT AVG(SALARY) INTO AVG_SAL FROM EMPLOYEE WHERE DEPARTMENT_ID = DEP_ID;
        VALID_ID := 1;
    ELSE
        AVG_SAL := 0;
        VALID_ID := 0;
    END IF;
    COMMIT;
END;
/

DECLARE
    AVG_SAL NUMBER;
    VALID_ID NUMBER;
BEGIN
    SP_GIVE_RAISE(1000,AVG_SAL,VALID_ID);
    DBMS_OUTPUT.PUT_LINE(AVG_SAL);
    DBMS_OUTPUT.PUT_LINE(VALID_ID);
END;